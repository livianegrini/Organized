<h2>Lista de Usuários:</h2>

<button onclick="cadastrarEvento()">Cadastrar Usuário</button>

<table border="1" id="usuariosTable">
  <thead>
    <tr>
      <th>Nome Usuário</th>
      <th>Email</th>
      <th>Senha</th>
      <th colspan="2">Ações</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td colspan="6">Carregando usuários...</td>
    </tr>
  </tbody>
</table>

<!-- Formulário de edição -->
<div id="editarEventoContainer" style="display: none; margin-top: 30px;">
  <h3>Editar Usuário</h3>
  <form id="eventoForm" onsubmit="salvarEdicao(event)">
    <input type="hidden" id="eventoId">

    <label>Nome do Usuário:</label><br>
    <input type="text" id="nome_evento" required><br><br>

    <label>Email:</label><br>
    <input type="date" id="data" required><br><br>

    <label>Senha:</label><br>
    <input type="text" id="local" required><br><br>

    <button type="submit">Salvar Alterações</button>
    <button type="button" onclick="cancelarEdicao()">Cancelar</button>
  </form>
</div>

<script>
  async function listarUsuarios() {
    try {
      const response = await fetch('/api/usuario');
      if (!response.ok) throw new Error('Erro ao buscar usuários');

      const users = await response.json();
      const tableBody = document.querySelector('#usuariosTable tbody');
      tableBody.innerHTML = '';

      if (users.length > 0) {
        users.forEach(user => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${user.nome}</td>
            <td>${user.email}</td>
            <td>${user.senha}</td>
            <td>
              <button onclick="editarEvento('${user.id}')">
                <img src="../../assets/lapis.png" alt="Editar" width="20" height="20">
              </button>
            </td>
            <td>
              <button onclick="deletarUsuario('${user.id}')">
                <img src="../../assets/lixeira.png" alt="Excluir" width="20" height="20">
              </button>
            </td>
          `;
          tableBody.appendChild(row);
        });
      } else {
        tableBody.innerHTML = '<tr><td colspan="6">Nenhum usuário encontrado.</td></tr>';
      }
    } catch (error) {
      console.error(error);
      const tableBody = document.querySelector('#usuariosTable tbody');
      tableBody.innerHTML = '<tr><td colspan="6">Erro ao carregar usuários.</td></tr>';
    }
  }

  async function cadastrarEvento() {
    window.location.href = '/cadastro';
  }

  async function deletarUsuario(id) {
    try {
      const response = await fetch(`/api/usuario/${id}`, {
        method: 'DELETE'
      });

      const text = await response.text();
      console.log('Resposta do DELETE:', text);

      if (!response.ok) {
        throw new Error('Erro ao excluir evento: ' + text);
      }

      alert('Evento excluído com sucesso!');
      listarEventos();
    } catch (error) {
      console.error(error);
      alert(error.message);
    }
  }

  async function editarEvento(id) {
    try {
      const response = await fetch(`/api/evento/${id}`);
      if (!response.ok) throw new Error('Erro ao buscar evento');

      const evento = await response.json();

      // Corrigindo o formato da data para yyyy-MM-dd (aceito pelo input type="date")
      const dataFormatada = new Date(evento.data).toISOString().split('T')[0];

      document.getElementById('eventoId').value = evento.id;
      document.getElementById('nome_evento').value = evento.nome_evento;
      document.getElementById('data').value = dataFormatada;
      document.getElementById('local').value = evento.local;
      document.getElementById('descricao').value = evento.descricao;

      document.getElementById('editarEventoContainer').style.display = 'block';
    } catch (error) {
      console.error(error);
      alert('Erro ao carregar dados do evento para edição.');
    }
  }

  async function salvarEdicao(e) {
    e.preventDefault();

    const id = document.getElementById('eventoId').value;
    const nome_evento = document.getElementById('nome_evento').value;
    const data = document.getElementById('data').value;
    const local = document.getElementById('local').value;
    const descricao = document.getElementById('descricao').value;

    const evento = { nome_evento, data, local, descricao };

    console.log("ID do evento:", id);
    console.log("Payload:", evento);
    console.log("Enviando PUT para:", `/api/evento/${id}`);

    try {
      const response = await fetch(`/api/evento/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(evento)
      });

      if (!response.ok) {
        const errText = await response.text();
        throw new Error('Erro ao atualizar evento: ' + errText);
      }

      alert('Evento atualizado com sucesso!');
      document.getElementById('eventoForm').reset();
      document.getElementById('editarEventoContainer').style.display = 'none';
      listarEventos();
    } catch (error) {
      console.error(error);
      alert(error.message || 'Erro ao atualizar evento');
    }
  }

  function cancelarEdicao() {
    document.getElementById('eventoForm').reset();
    document.getElementById('editarEventoContainer').style.display = 'none';
  }

  listarEventos();
</script>
