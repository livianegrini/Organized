<!DOCTYPE html>
<html lang="pt-BR">

<head>
  <meta charset="UTF-8" />
  <title>Eventos</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet" />
  <style>
    body {
      background-color: #f8f9fa;
    }

    .evento-card {
      background: white;
      border-radius: 16px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
      padding: 20px;
      transition: transform 0.2s ease-in-out;
    }

    .evento-card:hover {
      transform: translateY(-4px);
    }

    .evento-data {
      color: #f57c00;
      font-weight: bold;
      font-size: 0.9rem;
    }

    .evento-nome {
      font-size: 1.2rem;
      font-weight: 600;
      margin-bottom: 4px;
    }

    .evento-local {
      font-size: 0.95rem;
      color: #6c757d;
      margin-bottom: 12px;
    }

    .btn-icon {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: 36px;
      height: 36px;
      padding: 0;
    }

    .btn-light {
      font-weight: 500;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
      transition: all 0.2s;
    }

    .btn-light:hover {
      background-color: #e2e6ea;
    }
  </style>
</head>

<body>
  <!-- Cabeçalho azul com botões -->
  <div class="bg-primary text-white p-4 mb-4 d-flex justify-content-between align-items-center">
    <div class="container d-flex flex-wrap gap-2" id="headerButtons">
      <!-- Botões aparecerão aqui se for admin -->
    </div>
    <div class="container d-flex justify-content-end">
      <button class="btn btn-light" onclick="sair()">
        <i class="bi bi-box-arrow-right"></i> Sair
      </button>
    </div>
  </div>

  <div class="container pt-4">
    <!-- Título principal -->
    <h2 class="fw-bold text-primary mb-4">Eventos Disponíveis</h2>
  </div>

  <div class="container pb-5">
    <div class="row" id="eventosContainer">
      <div class="col-12 text-center" id="carregando">
        <span>Carregando eventos...</span>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
    function sair() {
      localStorage.clear();
      window.location.href = '/'; // login
    }

    function mostrarBotoesAdmin() {
      const usuarioJSON = localStorage.getItem('usuario');
      if (!usuarioJSON) {
        window.location.href = '/login';
        return false;
      }

      const usuario = JSON.parse(usuarioJSON);

      if (usuario.email && usuario.email.toLowerCase() === 'adm@gmail.com') {
        usuario.tipo = 'admin'; // força admin
        localStorage.setItem('usuario', JSON.stringify(usuario));
      }

      const ehAdmin = usuario.tipo === 'admin';

      const headerButtons = document.getElementById('headerButtons');
      headerButtons.innerHTML = '';

      if (ehAdmin) {
        headerButtons.innerHTML = `
          <button class="btn btn-light" onclick="cadastrarEvento()">Cadastrar Evento</button>
          <button class="btn btn-light" onclick="cadastrarUsuario()">Cadastrar Usuário</button>
          <button class="btn btn-light" onclick="listarUsuarios()">Listar Usuários</button>
          <button class="btn btn-light" onclick="listarInscricoes()">Listar Inscrições</button>
        `;
      }

      return ehAdmin;
    }

    async function listarEventos() {
      try {
        const response = await fetch('/api/evento');
        if (!response.ok) throw new Error('Erro ao buscar eventos');

        const eventosRaw = await response.json();

        const hoje = new Date();
        hoje.setHours(0, 0, 0, 0);

        const eventos = eventosRaw
          .filter(e => {
            const dataEvento = new Date(e.data);
            dataEvento.setHours(0, 0, 0, 0);
            return dataEvento >= hoje;
          })
          .sort((a, b) => new Date(a.data) - new Date(b.data));

        const container = document.getElementById('eventosContainer');
        container.innerHTML = '';

        const ehAdmin = mostrarBotoesAdmin();

        if (eventos.length > 0) {
          eventos.forEach(evento => {
            const dataFormatada = new Date(evento.data).toLocaleDateString('pt-BR', {
              weekday: 'short',
              day: '2-digit',
              month: 'short',
              year: 'numeric'
            });

            const col = document.createElement('div');
            col.className = 'col-md-6 col-lg-4 mb-4';

            col.innerHTML = `
              <div class="evento-card">
                <div class="evento-data">${dataFormatada}</div>
                <div class="evento-nome">${evento.nome_evento}</div>
                <div class="evento-local">${evento.local || '-'}</div>
                <div class="d-flex justify-content-between align-items-center">
                  ${!ehAdmin
                ? `<button class="btn btn-outline-primary btn-sm" onclick="inscrever('${evento.id}')">Inscrever</button>`
                : ''
              }
                  <div>
                    ${ehAdmin
                ? `
                        <button class="btn btn-outline-secondary btn-icon me-2" onclick="editarEvento('${evento.id}')" title="Editar">
                          <i class="bi bi-pencil-fill"></i>
                        </button>
                        <button class="btn btn-outline-danger btn-icon" onclick="deletarEvento('${evento.id}')" title="Excluir">
                          <i class="bi bi-trash-fill"></i>
                        </button>`
                : ''
              }
                  </div>
                </div>
              </div>
            `;

            container.appendChild(col);
          });
        } else {
          container.innerHTML = '<div class="col-12 text-center">Nenhum evento encontrado.</div>';
        }
      } catch (error) {
        console.error(error);
        document.getElementById('eventosContainer').innerHTML =
          '<div class="col-12 text-danger text-center">Erro ao carregar eventos.</div>';
      }
    }

    function cadastrarEvento() {
      window.location.href = '/cadastro';
    }

    function cadastrarUsuario() {
      window.location.href = '/cadastroUsuario';
    }

    function inscrever(id) {
      window.location.href = `/cadastroInscricao?eventoId=${id}`;
    }
    
    function editarEvento(id) {
      window.location.href = `/editarEvento/${id}`;
    }

    function listarInscricoes() {
      window.location.href = '/homeInscricao';
    }

    function listarUsuarios() {
      window.location.href = '/homeUsuario';
    }

    async function deletarEvento(id) {
      const result = await Swal.fire({
        title: 'Tem certeza?',
        text: "Deseja realmente excluir este evento?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Sim, excluir!',
        cancelButtonText: 'Cancelar'
      });

      if (result.isConfirmed) {
        try {
          const response = await fetch(`/api/evento/${id}`, { method: 'DELETE' });
          if (!response.ok) throw new Error(await response.text());

          await Swal.fire('Excluído!', 'Evento deletado com sucesso!', 'success');
          listarEventos();
        } catch (error) {
          await Swal.fire('Erro', "Erro ao excluir evento: " + error.message, 'error');
          window.location.href = '/home';
        }
      } else {
        window.location.href = '/home';
      }
    }

    listarEventos();
  </script>
</body>

</html>