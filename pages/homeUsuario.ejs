<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8" />
    <title>Lista de Usuários</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
    <style>
        body {
            background-color: #f8fafc;
            padding: 40px 30px;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #333;
        }

        .container {
            max-width: 1100px;
            margin: auto;
            background-color: #ffffff;
            padding: 40px 35px;
            border-radius: 10px;
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.08);
            transition: box-shadow 0.3s ease;
        }

        .container:hover {
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
        }

        h2 {
            text-align: center;
            margin-bottom: 30px;
            font-weight: 700;
            color: #222;
        }

        #usuariosTable {
            border-collapse: separate;
            border-spacing: 0 10px;
            width: 100%;
        }

        #usuariosTable thead th {
            background-color: #e9ecef;
            font-weight: 600;
            color: #555;
            padding: 12px 15px;
            border-radius: 8px;
            text-align: center;
        }

        #usuariosTable tbody tr {
            background-color: #fefefe;
            box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s ease;
        }

        #usuariosTable tbody tr:hover {
            background-color: #f1f5f9;
        }

        #usuariosTable tbody td {
            padding: 12px 15px;
            vertical-align: middle;
            text-align: center;
            color: #444;
            font-size: 0.95rem;
        }

        #usuariosTable tbody td:nth-child(3) {
            font-family: monospace;
            letter-spacing: 0.05em;
            width: 180px;
        }

        #usuariosTable tbody td:nth-child(4),
        #usuariosTable tbody td:nth-child(5) {
            width: 60px;
        }

        .btn-voltar {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 20px;
            font-weight: 600;
            color: #3b82f6;
            background-color: #e0e7ff;
            border: none;
            border-radius: 8px;
            padding: 8px 18px;
            cursor: pointer;
            transition: background-color 0.3s ease, color 0.3s ease, transform 0.15s ease;
            user-select: none;
        }

        .btn-voltar:hover {
            background-color: #c7d2fe;
            color: #1e40af;
            transform: translateY(-2px);
        }

        .btn-voltar i {
            font-size: 1.3rem;
        }

        .btn-icon {
            background: transparent;
            border: none;
            padding: 4px;
            cursor: pointer;
            transition: transform 0.15s ease;
            color: #555;
        }

        .btn-icon:hover {
            color: #0d6efd;
            transform: scale(1.2);
        }

        /* Formulário de edição */
        #editarUsuarioContainer {
            margin-top: 40px;
            background-color: #fafafa;
            padding: 25px 20px;
            border-radius: 10px;
            box-shadow: inset 0 0 8px rgba(0, 0, 0, 0.05);
        }
    </style>
</head>

<body>
    <div class="container">
        <button class="btn-voltar" onclick="window.location.href='/home'">
            <i class="bi bi-arrow-left-circle"></i> Voltar
        </button>

        <h2>Lista de Usuários</h2>

        <div class="text-end mb-3">
            <button class="btn btn-primary" onclick="cadastrarUsuario()">Cadastrar Usuário</button>
        </div>

        <table class="table" id="usuariosTable">
            <thead>
                <tr>
                    <th>Nome Usuário</th>
                    <th>Email</th>
                    <th>Senha</th>
                    <th colspan="2">Ações</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="5">Carregando usuários...</td>
                </tr>
            </tbody>
        </table>

        <div id="editarUsuarioContainer" style="display: none;">
            <h4>Editar Usuário</h4>
            <form id="usuarioForm" onsubmit="salvarEdicao(event)">
                <input type="hidden" id="usuarioId">

                <div class="mb-3">
                    <label for="nome" class="form-label">Nome do Usuário</label>
                    <input type="text" class="form-control" id="nome" required>
                </div>

                <div class="mb-3">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" class="form-control" id="email" required>
                </div>

                <div class="mb-3">
                    <label for="senha" class="form-label">Senha</label>
                    <input type="text" class="form-control" id="senha" required>
                </div>

                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-success w-100">Salvar Alterações</button>
                    <button type="button" class="btn btn-secondary w-100" onclick="cancelarEdicao()">Cancelar</button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        async function listarUsuarios() {
            try {
                const response = await fetch('/api/usuario');
                if (!response.ok) throw new Error('Erro ao buscar usuários');

                const usuarios = await response.json();
                const tableBody = document.querySelector('#usuariosTable tbody');
                tableBody.innerHTML = '';

                if (usuarios.length > 0) {
                    usuarios.forEach(usuario => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${usuario.nome}</td>
                            <td>${usuario.email}</td>
                            <td>${usuario.senha}</td>
                            <td>
                                <button class="btn-icon" onclick="editarUsuario('${usuario.id}')" title="Editar usuário">
                                    <img src="../../assets/lapis.png" alt="Editar" width="24" height="24">
                                </button>
                            </td>
                            <td>
                                <button class="btn-icon" onclick="confirmarDeletarUsuario('${usuario.id}')" title="Excluir usuário">
                                    <img src="../../assets/lixeira.png" alt="Excluir" width="24" height="24">
                                </button>
                            </td>
                        `;
                        tableBody.appendChild(row);
                    });
                } else {
                    tableBody.innerHTML = '<tr><td colspan="5">Nenhum usuário encontrado.</td></tr>';
                }
            } catch (error) {
                console.error(error);
                document.querySelector('#usuariosTable tbody').innerHTML =
                    '<tr><td colspan="5">Erro ao carregar usuários.</td></tr>';
            }
        }

        function cadastrarUsuario() {
            window.location.href = '/cadastroUsuario';
        }

        async function confirmarDeletarUsuario(id) {
            Swal.fire({
                title: 'Tem certeza?',
                text: 'Você não poderá reverter isso!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Sim, excluir!',
                cancelButtonText: 'Cancelar'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    // Se o usuário confirmar, chame a função para realmente deletar
                    await deletarUsuario(id); 
                }
            });
        }

        // Esta é a função que realmente faz a requisição DELETE para o backend
        async function deletarUsuario(id) {
            try {
                const response = await fetch(`/api/usuario/${id}`, { method: 'DELETE' });

                const text = await response.text();
                if (!response.ok) throw new Error('Erro ao excluir usuário: ' + text);

                Swal.fire({
                    icon: 'success',
                    title: 'Excluído',
                    text: 'Usuário excluído com sucesso!',
                    timer: 2000,
                    showConfirmButton: false
                });

                listarUsuarios(); // Atualiza a lista de usuários após a exclusão
            } catch (error) {
                console.error(error);
                Swal.fire({
                    icon: 'error',
                    title: 'Erro',
                    text: error.message || 'Erro ao excluir usuário'
                });
            }
        }

        async function editarUsuario(id) {
            try {
                const response = await fetch(`/api/usuario/${id}`);
                if (!response.ok) {
                    const errorText = await response.text();
                    throw new Error(`Erro ao buscar usuário: ${errorText}`);
                }

                const usuario = await response.json();

                document.getElementById('usuarioId').value = usuario.id;
                document.getElementById('nome').value = usuario.nome;
                document.getElementById('email').value = usuario.email;
                document.getElementById('senha').value = usuario.senha;

                document.getElementById('editarUsuarioContainer').style.display = 'block';
                window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });
            } catch (error) {
                console.error(error);
                Swal.fire({
                    icon: 'error',
                    title: 'Erro',
                    text: error.message || 'Erro ao carregar dados do usuário para edição.'
                });
            }
        }


        async function salvarEdicao(e) {
            e.preventDefault();

            const id = document.getElementById('usuarioId').value;
            const nome = document.getElementById('nome').value;
            const email = document.getElementById('email').value;
            const senha = document.getElementById('senha').value;

            try {
                const response = await fetch(`/api/usuario/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ nome, email, senha })
                });

                if (!response.ok) {
                    let errMsg = 'Erro ao atualizar usuário';
                    try {
                        const errJson = await response.json();
                        if (errJson.error) errMsg = errJson.error;
                    } catch {
                        const errText = await response.text();
                        if (errText) errMsg = errText;
                    }
                    throw new Error(errMsg);
                }

                Swal.fire({
                    icon: 'success',
                    title: 'Atualizado',
                    text: 'Usuário atualizado com sucesso!',
                    timer: 2000,
                    showConfirmButton: false
                });

                document.getElementById('usuarioForm').reset();
                document.getElementById('editarUsuarioContainer').style.display = 'none';
                listarUsuarios();
            } catch (error) {
                console.error(error);
                Swal.fire({
                    icon: 'error',
                    title: 'Erro',
                    text: error.message || 'Erro ao atualizar usuário'
                });
            }
        }

        function cancelarEdicao() {
            document.getElementById('usuarioForm').reset();
            document.getElementById('editarUsuarioContainer').style.display = 'none';
        }

        listarUsuarios();
    </script>
</body>

</html>